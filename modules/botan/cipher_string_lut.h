static const std::map<uint64_t, std::string> LUT = {
    { CF_CIPHER("AES_128_CBC"), "AES-128/CBC" },
    { CF_CIPHER("AES_128_CTR"), "AES-128/CTR" },
    { CF_CIPHER("AES_128_OCB"), "AES-128/OCB" },
    { CF_CIPHER("AES_128_XTS"), "AES-128/XTS" },
    { CF_CIPHER("AES_192_CBC"), "AES-192/CBC" },
    { CF_CIPHER("AES_192_CTR"), "AES-192/CTR" },
    { CF_CIPHER("AES_256_CBC"), "AES-256/CBC" },
    { CF_CIPHER("AES_256_CTR"), "AES-256/CTR" },
    { CF_CIPHER("AES_256_OCB"), "AES-256/OCB" },
    { CF_CIPHER("AES_256_XTS"), "AES-256/XTS" },
    { CF_CIPHER("ARIA_128_CBC"), "ARIA-128/CBC" },
    { CF_CIPHER("ARIA_128_CTR"), "ARIA-128/CTR" },
    { CF_CIPHER("ARIA_192_CBC"), "ARIA-192/CBC" },
    { CF_CIPHER("ARIA_192_CTR"), "ARIA-192/CTR" },
    { CF_CIPHER("ARIA_256_CBC"), "ARIA-256/CBC" },
    { CF_CIPHER("ARIA_256_CTR"), "ARIA-256/CTR" },
    { CF_CIPHER("BF_CBC"), "Blowfish/CBC" },
    { CF_CIPHER("CAMELLIA_128_CBC"), "Camellia-128/CBC" },
    { CF_CIPHER("CAMELLIA_192_CBC"), "Camellia-192/CBC" },
    { CF_CIPHER("CAMELLIA_256_CBC"), "Camellia-256/CBC" },
    { CF_CIPHER("CAST5_CBC"), "CAST5/CBC" },
    { CF_CIPHER("CHACHA20"), "ChaCha(20)" },
    { CF_CIPHER("DESX_B_CBC"), "DESX/CBC" },
    { CF_CIPHER("DES_CBC"), "DES/CBC" },
    { CF_CIPHER("DES_EDE3_CBC"), "DES-EDE/CBC" },
    { CF_CIPHER("IDEA_CBC"), "IDEA/CBC" },
    { CF_CIPHER("SEED_CBC"), "SEED/CBC" },
    { CF_CIPHER("SEED_OFB"), "SEED/OFB" },
    { CF_CIPHER("SM4_CBC"), "SM4/CBC" },
    { CF_CIPHER("SM4_CTR"), "SM4/CTR" },
    { CF_CIPHER("SM4_OFB"), "SM4/OFB" },
    { CF_CIPHER("THREEFISH_512_CBC"), "Threefish-512/CBC" },
    { CF_CIPHER("THREEFISH_512_CTR"), "Threefish-512/CTR" },
    { CF_CIPHER("THREEFISH_512_OFB"), "Threefish-512/OFB" },
    { CF_CIPHER("THREEFISH_512_XTS"), "Threefish-512/XTS" },
    { CF_CIPHER("SHACAL2_CBC"), "SHACAL2/CBC" },
    { CF_CIPHER("SHACAL2_CTR"), "SHACAL2/CTR" },
    { CF_CIPHER("SHACAL2_OFB"), "SHACAL2/OFB" },
    { CF_CIPHER("SHACAL2_XTS"), "SHACAL2/XTS" },
    { CF_CIPHER("NOEKEON_CBC"), "Noekeon/CBC" },
    { CF_CIPHER("NOEKEON_CTR"), "Noekeon/CTR" },
    { CF_CIPHER("NOEKEON_OFB"), "Noekeon/OFB" },
    { CF_CIPHER("NOEKEON_XTS"), "Noekeon/XTS" },
    { CF_CIPHER("KASUMI_CBC"), "KASUMI/CBC" },
    { CF_CIPHER("KASUMI_CTR"), "KASUMI/CTR" },
    { CF_CIPHER("KASUMI_OFB"), "KASUMI/OFB" },
    { CF_CIPHER("KASUMI_XTS"), "KASUMI/XTS" },
    { CF_CIPHER("MISTY1_CBC"), "MISTY1/CBC" },
    { CF_CIPHER("MISTY1_CTR"), "MISTY1/CTR" },
    { CF_CIPHER("MISTY1_OFB"), "MISTY1/OFB" },
    { CF_CIPHER("MISTY1_XTS"), "MISTY1/XTS" },
    { CF_CIPHER("XTEA_CBC"), "XTEA/CBC" },
    { CF_CIPHER("XTEA_CTR"), "XTEA/CTR" },
    { CF_CIPHER("XTEA_OFB"), "XTEA/OFB" },
    { CF_CIPHER("XTEA_XTS"), "XTEA/XTS" },
    //{ CF_CIPHER("GOST-28147-89"), "GOST-28147-89/CBC" },
};
